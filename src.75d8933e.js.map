{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","startFaceClock","start","days","hours","mins","secs","getTimeComponents","updateTimer","intervalId","setInterval","currentTime","Date","now","differenceTime","clearInterval","time","Math","floor","pad","value","String","padStart","daysRef","document","querySelector","textContent","hoursRef","minsRef","secsRef","nextElementSibling","timer"],"mappings":";;;AAuEA,aAvEA,QAAA,oBAGA,MAAMA,EAEFC,aAAY,SAAEC,EAAF,WAAWC,IACdA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EACXE,KAAAA,iBACAC,KAAAA,QAGTD,iBACU,MAAA,KAAEE,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKC,kBAAkB,GACtDC,KAAAA,YAAYL,EAAMC,EAAOC,EAAMC,GAGxCJ,QAEUO,MAAAA,EAAaC,YAAY,KACrBC,MAAAA,EAAcC,KAAKC,MACnBC,EAAiB,KAAKd,WAAaW,GACnC,KAAER,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKC,kBAAkBO,GAEvDA,GADCN,KAAAA,YAAYL,EAAMC,EAAOC,EAAMC,GAChCQ,GAAkB,EAGX,OAFPC,cAAcN,GACTR,KAAAA,kBACE,GAGZ,KAIPM,kBAAkBS,GAMP,MAAA,CAAEb,KALKc,KAAKC,MAAMF,EAAQ,OAKlBZ,MAJD,KAAKe,IAAIF,KAAKC,MAAOF,EAAQ,MAAyB,OAI9CX,KAHT,KAAKc,IAAIF,KAAKC,MAAOF,EAAQ,KAAoB,MAGlCV,KAFf,KAAKa,IAAIF,KAAKC,MAAOF,EAAQ,IAAc,OAK5DG,IAAIC,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,GAGrCd,YAAaL,EAAMC,EAAOC,EAAMC,GACtBiB,MAAAA,EAAUC,SAASC,iBAAiB,KAAK1B,gCAC/CwB,EAAQG,YAAcvB,EAChBwB,MAAAA,EAAWH,SAASC,iBAAiB,KAAK1B,iCAChD4B,EAASD,YAActB,EACjBwB,MAAAA,EAAUJ,SAASC,iBAAiB,KAAK1B,gCAC/C6B,EAAQF,YAAcrB,EAChBwB,MAAAA,EAAUL,SAASC,iBAAiB,KAAK1B,gCAC/C8B,EAAQH,YAAcpB,EAElBiB,EAAQO,mBAAmBJ,YADjB,IAATvB,GAAwB,IAATA,EACyB,MACI,OAE7CwB,EAASG,mBAAmBJ,YADjB,IAAVtB,GAA0B,IAAVA,EACyB,OACI,QAE9CwB,EAAQE,mBAAmBJ,YADjB,IAATrB,GAAwB,IAATA,EACyB,SACI,UAE7CwB,EAAQC,mBAAmBJ,YADjB,IAATpB,GAAwB,IAATA,EACyB,SACI,WAIzD,MAAMyB,EAAQ,IAAIlC,EAAe,CAC7BE,SAAU,WACVC,WAAY,IAAIY,KAAK","file":"src.75d8933e.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\nclass CountdownTimer {\n    \n    constructor({ selector,targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n        this.startFaceClock();\n        this.start();\n    };\n\n    startFaceClock() {\n        const { days, hours, mins, secs } = this.getTimeComponents(0);\n        this.updateTimer(days, hours, mins, secs);\n    }\n\n    start() {\n        \n        const intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const differenceTime = this.targetDate - currentTime;\n            const { days, hours, mins, secs } = this.getTimeComponents(differenceTime);\n            this.updateTimer(days, hours, mins, secs);\n            if (differenceTime <= 0) {\n                clearInterval(intervalId)\n                this.startFaceClock()\n                return false;\n            }\n\n        }, 1000);\n    }\n\n\n    getTimeComponents(time) {\n        const days = (Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, 0);\n    }\n\n    updateTimer( days, hours, mins, secs) {\n        const daysRef = document.querySelector(`${this.selector} [data-value=\"days\"]`);\n        daysRef.textContent = days;\n        const hoursRef = document.querySelector(`${this.selector} [data-value=\"hours\"]`);\n        hoursRef.textContent = hours;\n        const minsRef = document.querySelector(`${this.selector} [data-value=\"mins\"]`);\n        minsRef.textContent = mins;\n        const secsRef = document.querySelector(`${this.selector} [data-value=\"secs\"]`);\n        secsRef.textContent = secs;\n        if (+days === 0 || +days === 1) {\n            daysRef.nextElementSibling.textContent = \"Day\";\n        } else (daysRef.nextElementSibling.textContent = \"Days\");\n        if (+hours === 0 || +hours === 1) {\n            hoursRef.nextElementSibling.textContent = \"Hour\";\n        } else (hoursRef.nextElementSibling.textContent = \"Hours\");\n        if (+mins === 0 || +mins === 1) {\n            minsRef.nextElementSibling.textContent = \"Minute\";\n        } else (minsRef.nextElementSibling.textContent = \"Minutes\");\n        if (+secs === 0 || +secs === 1) {\n            secsRef.nextElementSibling.textContent = \"Second\";\n        } else (secsRef.nextElementSibling.textContent = \"Seconds\");\n    }\n};\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2020'),\n})\n\n\n\n\n\n"]}
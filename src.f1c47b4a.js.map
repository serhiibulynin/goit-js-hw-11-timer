{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","days","document","querySelector","hours","mins","secs","startFaceClock","start","getTimeComponents","updateTimer","intervalId","setInterval","currentTime","Date","now","differenceTime","clearInterval","time","Math","floor","pad","value","String","padStart","textContent","nextElementSibling","timer"],"mappings":";;;AA2EA,aA3EA,QAAA,oBAIA,MAAMA,EAGFC,aAAY,SAAEC,EAAF,WAAWC,IACdA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EACXE,KAAAA,KAAO,CACRC,KAAOC,SAASC,iBAAiB,KAAKL,gCACtCM,MAAQF,SAASC,iBAAiB,KAAKL,iCACvCO,KAAOH,SAASC,iBAAiB,KAAKL,gCACtCQ,KAAOJ,SAASC,iBAAiB,KAAKL,iCAErCS,KAAAA,iBACAC,KAAAA,QAGTD,iBACU,MAAA,KAAEN,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKG,kBAAkB,GACtDC,KAAAA,YAAYT,EAAMG,EAAOC,EAAMC,GAGxCE,QAEUG,MAAAA,EAAaC,YAAY,KACrBC,MAAAA,EAAcC,KAAKC,MACnBC,EAAiB,KAAKjB,WAAac,GACnC,KAAEZ,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKG,kBAAkBO,GAEvDA,GADCN,KAAAA,YAAYT,EAAMG,EAAOC,EAAMC,GAChCU,GAAkB,EAGX,OAFPC,cAAcN,GACTJ,KAAAA,kBACE,GAGZ,KAIPE,kBAAkBS,GAMP,MAAA,CAAEjB,KALKkB,KAAKC,MAAMF,EAAQ,OAKlBd,MAJD,KAAKiB,IAAIF,KAAKC,MAAOF,EAAQ,MAAyB,OAI9Cb,KAHT,KAAKgB,IAAIF,KAAKC,MAAOF,EAAQ,KAAoB,MAGlCZ,KAFf,KAAKe,IAAIF,KAAKC,MAAOF,EAAQ,IAAc,OAK5DG,IAAIC,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,GAGrCd,YAAYT,EAAMG,EAAOC,EAAMC,GACtBN,KAAAA,KAAKC,KAAKwB,YAAcxB,EACxBD,KAAAA,KAAKI,MAAMqB,YAAcrB,EACzBJ,KAAAA,KAAKK,KAAKoB,YAAcpB,EACxBL,KAAAA,KAAKM,KAAKmB,YAAcnB,EAEpBN,KAAAA,KAAKC,KAAKyB,mBAAmBD,YADxB,IAATxB,GAAwB,IAATA,EACgC,MACI,OAE/CD,KAAAA,KAAKI,MAAMsB,mBAAmBD,YADxB,IAAVrB,GAA0B,IAAVA,EACgC,OACI,QAEhDJ,KAAAA,KAAKK,KAAKqB,mBAAmBD,YADxB,IAATpB,GAAwB,IAATA,EACgC,SACI,UAE/CL,KAAAA,KAAKM,KAAKoB,mBAAmBD,YADxB,IAATnB,GAAwB,IAATA,EACgC,SACI,WAIhE,MAAMqB,EAAQ,IAAI/B,EAAe,CAC7BE,SAAU,WACVC,WAAY,IAAIe,KAAK","file":"src.f1c47b4a.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\n        \nclass CountdownTimer {\n    \n\n    constructor({ selector,targetDate}) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n        this.refs = {\n            days : document.querySelector(`${this.selector} [data-value=\"days\"]`),\n            hours : document.querySelector(`${this.selector} [data-value=\"hours\"]`),\n            mins : document.querySelector(`${this.selector} [data-value=\"mins\"]`),\n            secs : document.querySelector(`${this.selector} [data-value=\"secs\"]`),\n        }\n        this.startFaceClock();\n        this.start();\n    };\n\n    startFaceClock() {\n        const { days, hours, mins, secs } = this.getTimeComponents(0);\n        this.updateTimer(days, hours, mins, secs);\n    }\n\n    start() {\n        \n        const intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const differenceTime = this.targetDate - currentTime;\n            const { days, hours, mins, secs } = this.getTimeComponents(differenceTime);\n            this.updateTimer(days, hours, mins, secs);\n            if (differenceTime <= 0) {\n                clearInterval(intervalId)\n                this.startFaceClock()\n                return false;\n            }\n\n        }, 1000);\n    }\n\n\n    getTimeComponents(time) {\n        const days = (Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, 0);\n    }\n\n    updateTimer(days, hours, mins, secs) {\n        this.refs.days.textContent = days;\n        this.refs.hours.textContent = hours;\n        this.refs.mins.textContent = mins;\n        this.refs.secs.textContent = secs;\n        if (+days === 0 || +days === 1) {\n            this.refs.days.nextElementSibling.textContent = \"Day\";\n        } else (this.refs.days.nextElementSibling.textContent = \"Days\");\n        if (+hours === 0 || +hours === 1) {\n            this.refs.hours.nextElementSibling.textContent = \"Hour\";\n        } else (this.refs.hours.nextElementSibling.textContent = \"Hours\");\n        if (+mins === 0 || +mins === 1) {\n            this.refs.mins.nextElementSibling.textContent = \"Minute\";\n        } else (this.refs.mins.nextElementSibling.textContent = \"Minutes\");\n        if (+secs === 0 || +secs === 1) {\n            this.refs.secs.nextElementSibling.textContent = \"Second\";\n        } else (this.refs.secs.nextElementSibling.textContent = \"Seconds\");\n    }\n};\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2021'),\n})\n\n\n\n\n\n"]}